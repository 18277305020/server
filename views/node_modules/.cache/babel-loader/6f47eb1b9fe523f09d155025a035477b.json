{"remainingRequest":"E:\\WebstormProjects\\server\\views\\node_modules\\babel-loader\\lib\\index.js!E:\\WebstormProjects\\server\\views\\src\\util\\http\\axios.js","dependencies":[{"path":"E:\\WebstormProjects\\server\\views\\src\\util\\http\\axios.js","mtime":1577090520432},{"path":"E:\\WebstormProjects\\server\\views\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\WebstormProjects\\server\\views\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsgLy/miYDmnInor7fmsYLnmoTmkLrluKbnmoTlj4LmlbDorr7nva4KCnZhciBodHRwID0gYXhpb3MuY3JlYXRlKHsKICBiYXNlVVJMOiAnaHR0cDovL2xvY2FsaG9zdDozMDAwJywKICAvL+a1i+ivleacjQogIHRpbWVvdXQ6IDIwMDAKfSk7IC8v6K6+572u5oum5oiq5ZmoCgpodHRwLmludGVyY2VwdG9ycy5yZXF1ZXN0LnVzZShmdW5jdGlvbiAoY29uZmlnKSB7CiAgcmV0dXJuIGNvbmZpZzsKfSwgZnVuY3Rpb24gKGVycm9yKSB7CiAgcmV0dXJuIGVycm9yOwp9KTsKaHR0cC5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKGZ1bmN0aW9uIChyZXMpIHsKICByZXR1cm4gcmVzOwp9LCBmdW5jdGlvbiAoZXJyKSB7CiAgLy/lr7nlk43lupTmlbDmja5lcnJvcuWkhOeQhgogIHJldHVybiBlcnI7Cn0pOwpleHBvcnQgZGVmYXVsdCBodHRwOw=="},{"version":3,"sources":["E:/WebstormProjects/server/views/src/util/http/axios.js"],"names":["axios","http","create","baseURL","timeout","interceptors","request","use","config","error","response","res","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,IAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAa;AACtBC,EAAAA,OAAO,EAAE,uBADa;AACY;AAClCC,EAAAA,OAAO,EAAE;AAFa,CAAb,CAAb,C,CAKA;;AACAH,IAAI,CAACI,YAAL,CAAkBC,OAAlB,CAA0BC,GAA1B,CAA8B,UAAUC,MAAV,EAAkB;AAE5C,SAAOA,MAAP;AACH,CAHD,EAGG,UAAUC,KAAV,EAAiB;AAChB,SAAOA,KAAP;AACH,CALD;AAQAR,IAAI,CAACI,YAAL,CAAkBK,QAAlB,CAA2BH,GAA3B,CAA+B,UAAAI,GAAG,EAAI;AAClC,SAAOA,GAAP;AACH,CAFD,EAEG,UAAAC,GAAG,EAAI;AACN;AACA,SAAOA,GAAP;AACH,CALD;AAQA,eAAeX,IAAf","sourcesContent":["import axios from 'axios'\r\n\r\n//所有请求的携带的参数设置\r\nconst http = axios.create({\r\n    baseURL: 'http://localhost:3000', //测试服\r\n    timeout: 2000,\r\n})\r\n\r\n//设置拦截器\r\nhttp.interceptors.request.use(function (config) {\r\n\r\n    return config\r\n}, function (error) {\r\n    return error\r\n})\r\n\r\n\r\nhttp.interceptors.response.use(res => {\r\n    return res\r\n}, err => {\r\n    //对响应数据error处理\r\n    return err\r\n})\r\n\r\n\r\nexport default http"]}]}