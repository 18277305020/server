{"remainingRequest":"E:\\WebstormProjects\\server\\views\\node_modules\\babel-loader\\lib\\index.js!E:\\WebstormProjects\\server\\views\\src\\util\\http\\api.js","dependencies":[{"path":"E:\\WebstormProjects\\server\\views\\src\\util\\http\\api.js","mtime":1577093130157},{"path":"E:\\WebstormProjects\\server\\views\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\WebstormProjects\\server\\views\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgX3R5cGVvZiBmcm9tICJFOlxcV2Vic3Rvcm1Qcm9qZWN0c1xcc2VydmVyXFx2aWV3c1xcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vdHlwZW9mIjsKCi8q5YyF5ZCrbuS4quivt+axguWHveaVsOeahOaooeWdlw0KKiDlh73mlbDnmoTov5Tlm57lgLzvvJpwcm9taXNlDQoqIOesrOS4gOS4quWPguaVsO+8iHVybO+8ie+8jOesrOS6jOS4quWPguaVsO+8iHBvc3QvZ2V077yJLS3lrZfnrKbkuLIqLwppbXBvcnQgaHR0cCBmcm9tICcuL2F4aW9zJzsgLy8tLS0tLS0tLS0tLS0tLS0t55m75b2VL+mAgOWHui0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tCgpleHBvcnQgdmFyIGxvZ2luID0gZnVuY3Rpb24gbG9naW4ocGFyYW1zKSB7CiAgcmV0dXJuIHBvc3QoJy9tZW1iZXIvbG9naW4nLCBwYXJhbXMpOwp9OyAvL+eZu+mZhgovLy0tLS0tLS0tLS0tLS0tLS3nlKjmiLfliJfooagtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQoKZXhwb3J0IHZhciBtZW1iZXJMaXN0ID0gZnVuY3Rpb24gbWVtYmVyTGlzdChwYXJhbXMpIHsKICByZXR1cm4gcG9zdCgnL21lbWJlci9saXN0JywgcGFyYW1zKTsKfTsgLy8tLS0tLS0tLS0tLS0tLS0t5Z+656GA6K+35rGCLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KCmV4cG9ydCB2YXIgcG9zdCA9IGh0dHAucG9zdDsKZXhwb3J0IHZhciBnZXQgPSBmdW5jdGlvbiBnZXQodXJsLCBwYXJhbXMpIHsKICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgLy/mi7zmjqXot6/lvoQKICAgIC8vZ2V0VXJsID0g5pS55Y+Y5ZCO55qE6Lev5b6ECiAgICB2YXIgZ2V0VXJsID0gJyc7IC8vcGFyYW1zU3RyID0g5ouG5YiG5Y+C5pWw5ZCO5b6X5Yiw55qE5pWw57uECgogICAgdmFyIHBhcmFtc1N0ciA9IFtdOyAvL+agoemqjOWPguaVsOexu+WeiwoKICAgIGlmIChfdHlwZW9mKHBhcmFtcykgPT09ICdvYmplY3QnKSB7CiAgICAgIGZvciAodmFyIGtleSBpbiBwYXJhbXMpIHsKICAgICAgICBwYXJhbXNTdHIucHVzaChrZXkgKyAnPScgKyBwYXJhbXNba2V5XSk7CiAgICAgIH0KCiAgICAgIGdldFVybCA9ICc/JyArIHBhcmFtc1N0ci5qb2luKCcmJyk7CiAgICB9IGVsc2UgaWYgKHBhcmFtcyA9PT0gdW5kZWZpbmVkKSB7CiAgICAgIGdldFVybCA9ICcnOwogICAgfSBlbHNlIHsKICAgICAgZ2V0VXJsID0gcGFyYW1zOwogICAgfSAvL+iwg+eUqOivt+axguaWueazlQoKCiAgICBodHRwLmdldCh1cmwgKyBnZXRVcmwpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICByZXNvbHZlKHJlcyk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyKSB7CiAgICAgIHJlamVjdChlcnIpOwogICAgfSk7CiAgfSk7Cn07"},{"version":3,"sources":["E:/WebstormProjects/server/views/src/util/http/api.js"],"names":["http","login","params","post","memberList","get","url","Promise","resolve","reject","getUrl","paramsStr","key","push","join","undefined","then","res","catch","err"],"mappings":";;;;AAAA;;;AAGA,OAAOA,IAAP,MAAiB,SAAjB,C,CAEA;;AACA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,MAAD;AAAA,SAAYC,IAAI,CAAC,eAAD,EAAkBD,MAAlB,CAAhB;AAAA,CAAd,C,CAAyD;AAEhE;;AAEA,OAAO,IAAME,UAAU,GAAG,SAAbA,UAAa,CAACF,MAAD;AAAA,SAAYC,IAAI,CAAC,cAAD,EAAiBD,MAAjB,CAAhB;AAAA,CAAnB,C,CAEP;;AAGA,OAAO,IAAMC,IAAI,GAAGH,IAAI,CAACG,IAAlB;AAEP,OAAO,IAAME,GAAG,GAAG,SAANA,GAAM,CAACC,GAAD,EAAMJ,MAAN,EAAiB;AAChC,SAAO,IAAIK,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACpC;AACA;AACA,QAAIC,MAAM,GAAG,EAAb,CAHoC,CAIpC;;AACA,QAAIC,SAAS,GAAG,EAAhB,CALoC,CAMpC;;AACA,QAAI,QAAOT,MAAP,MAAkB,QAAtB,EAAgC;AAC5B,WAAK,IAAIU,GAAT,IAAgBV,MAAhB,EAAwB;AACpBS,QAAAA,SAAS,CAACE,IAAV,CAAeD,GAAG,GAAG,GAAN,GAAYV,MAAM,CAACU,GAAD,CAAjC;AACH;;AACDF,MAAAA,MAAM,GAAG,MAAMC,SAAS,CAACG,IAAV,CAAe,GAAf,CAAf;AACH,KALD,MAKO,IAAIZ,MAAM,KAAKa,SAAf,EAA0B;AAC7BL,MAAAA,MAAM,GAAG,EAAT;AACH,KAFM,MAEA;AACHA,MAAAA,MAAM,GAAGR,MAAT;AACH,KAhBmC,CAiBpC;;;AACAF,IAAAA,IAAI,CAACK,GAAL,CAASC,GAAG,GAAGI,MAAf,EAAuBM,IAAvB,CAA4B,UAAAC,GAAG,EAAI;AAC/BT,MAAAA,OAAO,CAACS,GAAD,CAAP;AACH,KAFD,EAEGC,KAFH,CAES,UAAAC,GAAG,EAAI;AACZV,MAAAA,MAAM,CAACU,GAAD,CAAN;AACH,KAJD;AAKH,GAvBM,CAAP;AAwBH,CAzBM","sourcesContent":["/*包含n个请求函数的模块\r\n* 函数的返回值：promise\r\n* 第一个参数（url），第二个参数（post/get）--字符串*/\r\nimport http from './axios'\r\n\r\n//----------------登录/退出-----------------------\r\nexport const login = (params) => post('/member/login', params)  //登陆\r\n\r\n//----------------用户列表--------------------------\r\n\r\nexport const memberList = (params) => post('/member/list', params)\r\n\r\n//----------------基础请求--------------------------\r\n\r\n\r\nexport const post = http.post\r\n\r\nexport const get = (url, params) => {\r\n    return new Promise((resolve, reject) => {\r\n        //拼接路径\r\n        //getUrl = 改变后的路径\r\n        let getUrl = ''\r\n        //paramsStr = 拆分参数后得到的数组\r\n        let paramsStr = []\r\n        //校验参数类型\r\n        if (typeof params === 'object') {\r\n            for (let key in params) {\r\n                paramsStr.push(key + '=' + params[key])\r\n            }\r\n            getUrl = '?' + paramsStr.join('&')\r\n        } else if (params === undefined) {\r\n            getUrl = ''\r\n        } else {\r\n            getUrl = params\r\n        }\r\n        //调用请求方法\r\n        http.get(url + getUrl).then(res => {\r\n            resolve(res)\r\n        }).catch(err => {\r\n            reject(err)\r\n        })\r\n    })\r\n}"]}]}